#pragma once

// THIS IS A GENERATED FILE; EDIT merge_sideloaded.sql INSTEAD
// To regenerate, run `node platform/default/mbgl/storage/merge_sideloaded.js`

namespace mbgl {

static constexpr const char* mergeSideloadedDatabaseSQL =
"INSERT INTO regions\n"
"   SELECT DISTINCT NULL, sr.definition, sr.description\n"
"    FROM side.regions sr \n"
"    LEFT JOIN regions r ON sr.definition = r.definition\n"
"      WHERE r.definition IS NULL;\n"
"CREATE TEMPORARY TABLE region_mapping AS\n"
"    SELECT sr.id AS side_region_id,\n"
"      r.id AS main_region_id\n"
"    FROM side.regions sr\n"
"    JOIN regions r ON sr.definition = r.definition;\n"
"CREATE TEMPORARY TABLE merged_tiles AS\n"
"  SELECT st.id as side_tile_id,\n"
"    t.id as main_tile_id,\n"
"    st.url_template, st.pixel_ratio, st.z, st.x, st.y, st.expires,\n"
"    st.modified, st.etag, st.data, st.compressed,st.accessed, st.must_revalidate,\n"
"    t.modified AS main_tile_modified,\n"
"    main_region_id\n"
"  FROM side.tiles st\n"
"  JOIN (SELECT DISTINCT srt.tile_id AS tile_id, rm.main_region_id \n"
"      FROM region_mapping rm\n"
"      JOIN side.region_tiles srt ON srt.region_id = rm.side_region_id)\n"
"    ON tile_id = st.id\n"
"  LEFT JOIN tiles t ON st.url_template = t.url_template AND\n"
"       st.pixel_ratio = t.pixel_ratio AND\n"
"       st.z = t.z AND\n"
"       st.x = t.x AND\n"
"       st.y = t.y;\n"
"REPLACE INTO tiles\n"
"    SELECT mt.main_tile_id,\n"
"      mt.url_template, mt.pixel_ratio, mt.z, mt.x, mt.y, mt.expires,\n"
"      mt.modified, mt.etag, mt.data, mt.compressed, mt.accessed, mt.must_revalidate\n"
"    FROM merged_tiles mt\n"
"    WHERE mt.main_tile_id IS NULL\n"
"    OR mt.modified > mt.main_tile_modified;\n"
"INSERT INTO region_tiles\n"
"  SELECT DISTINCT mt.main_region_id, t.id\n"
"  FROM merged_tiles mt\n"
"  INNER JOIN tiles t ON mt.url_template = t.url_template AND\n"
"      mt.pixel_ratio = t.pixel_ratio AND\n"
"      mt.z = t.z AND\n"
"      mt.x = t.x AND\n"
"      mt.y = t.y\n"
"  WHERE mt.main_tile_id IS NULL;\n"
"INSERT OR IGNORE INTO region_tiles\n"
"  SELECT DISTINCT mt.main_region_id, mt.main_tile_id\n"
"  FROM merged_tiles mt\n"
"  WHERE mt.main_tile_id IS NOT NULL;\n"
"DROP TABLE merged_tiles;\n"
"CREATE TEMPORARY TABLE merged_resources AS\n"
"  SELECT sr.id AS side_resource_id,\n"
"    r.id AS main_resource_id,\n"
"    sr.url, sr.kind, sr.expires, sr.modified, sr.etag, sr.data, sr.compressed, \n"
"    sr.accessed,\n"
"    sr.must_revalidate,\n"
"    r.modified AS main_resource_modified,\n"
"    main_region_id\n"
"  FROM side.resources sr\n"
"  JOIN (SELECT DISTINCT srr.resource_id AS resource_id, rm.main_region_id \n"
"      FROM region_mapping rm\n"
"      JOIN side.region_resources srr ON srr.region_id = rm.side_region_id)\n"
"    ON resource_id = sr.id\n"
"  LEFT JOIN resources r ON sr.url = r.url;\n"
"REPLACE INTO resources\n"
"  SELECT  mr.main_resource_id, \n"
"    mr.url, mr.kind, mr.expires, mr.modified, mr.etag,\n"
"    mr.data, mr.compressed, mr.accessed, mr.must_revalidate\n"
"  FROM merged_resources mr\n"
"    WHERE mr.main_resource_id IS NULL\n"
"    OR mr.modified > mr.main_resource_modified;\n"
"INSERT INTO region_resources\n"
"  SELECT DISTINCT mr.main_region_id, r.id\n"
"  FROM merged_resources mr\n"
"  INNER JOIN resources r ON mr.url = r.url\n"
"  WHERE mr.main_resource_id IS NULL;\n"
"INSERT OR IGNORE INTO region_resources\n"
"  SELECT DISTINCT mr.main_region_id, mr.main_resource_id\n"
"  FROM merged_resources mr\n"
"  WHERE mr.main_resource_id IS NOT NULL;\n"
"DROP TABLE merged_resources;\n"
"DROP TABLE region_mapping;\n"
;

} // namespace mbgl
